I"Ý0<p><br /></p>

<h2 id="cnn-with-imagedatagenerator--vgg16">CNN with ImageDataGenerator + VGG16</h2>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
<span class="kn">import</span> <span class="n">urllib</span>
<span class="kn">import</span> <span class="n">zipfile</span>
<span class="kn">from</span> <span class="n">tensorflow.keras.preprocessing.image</span> <span class="kn">import</span> <span class="n">ImageDataGenerator</span>

<span class="kn">from</span> <span class="n">tensorflow.keras.layers</span> <span class="kn">import</span> <span class="n">Conv2D</span><span class="p">,</span> <span class="n">MaxPooling2D</span><span class="p">,</span> <span class="n">Flatten</span><span class="p">,</span> <span class="n">Dropout</span><span class="p">,</span> <span class="n">Dense</span>
<span class="kn">from</span> <span class="n">tensorflow.keras.models</span> <span class="kn">import</span> <span class="n">Sequential</span>
<span class="kn">from</span> <span class="n">tensorflow.keras.callbacks</span> <span class="kn">import</span> <span class="n">ModelCheckpoint</span>
<span class="kn">from</span> <span class="n">tensorflow.keras.applications</span> <span class="kn">import</span> <span class="n">VGG16</span>

<span class="k">def</span> <span class="nf">solution_model</span><span class="p">():</span>
    <span class="n">_TRAIN_URL</span> <span class="o">=</span> <span class="s">"https://storage.googleapis.com/download.tensorflow.org/data/horse-or-human.zip"</span>
    <span class="n">_TEST_URL</span> <span class="o">=</span> <span class="s">"https://storage.googleapis.com/download.tensorflow.org/data/validation-horse-or-human.zip"</span>
    
    <span class="n">urllib</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="nf">urlretrieve</span><span class="p">(</span><span class="n">_TRAIN_URL</span><span class="p">,</span> <span class="s">'horse-or-human.zip'</span><span class="p">)</span>
    <span class="n">local_zip</span> <span class="o">=</span> <span class="s">'horse-or-human.zip'</span>
    <span class="n">zip_ref</span> <span class="o">=</span> <span class="n">zipfile</span><span class="p">.</span><span class="nc">ZipFile</span><span class="p">(</span><span class="n">local_zip</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span>
    <span class="n">zip_ref</span><span class="p">.</span><span class="nf">extractall</span><span class="p">(</span><span class="s">'tmp/horse-or-human/'</span><span class="p">)</span>
    <span class="n">zip_ref</span><span class="p">.</span><span class="nf">close</span><span class="p">()</span>

    <span class="n">urllib</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="nf">urlretrieve</span><span class="p">(</span><span class="n">_TEST_URL</span><span class="p">,</span> <span class="s">'validation-horse-or-human.zip'</span><span class="p">)</span>
    <span class="n">local_zip</span> <span class="o">=</span> <span class="s">'validation-horse-or-human.zip'</span>
    <span class="n">zip_ref</span> <span class="o">=</span> <span class="n">zipfile</span><span class="p">.</span><span class="nc">ZipFile</span><span class="p">(</span><span class="n">local_zip</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span>
    <span class="n">zip_ref</span><span class="p">.</span><span class="nf">extractall</span><span class="p">(</span><span class="s">'tmp/validation-horse-or-human/'</span><span class="p">)</span>
    <span class="n">zip_ref</span><span class="p">.</span><span class="nf">close</span><span class="p">()</span>

    <span class="n">TRAINING_DIR</span> <span class="o">=</span> <span class="s">'tmp/horse-or-human/'</span>
    <span class="n">VALIDATION_DIR</span> <span class="o">=</span> <span class="s">'tmp/validation-horse-or-human/'</span>

    <span class="n">train_datagen</span> <span class="o">=</span> <span class="nc">ImageDataGenerator</span><span class="p">(</span>
        <span class="n">rescale</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mf">255.0</span><span class="p">,</span>
        <span class="n">rotation_range</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span>
        <span class="n">width_shift_range</span> <span class="o">=</span> <span class="mf">0.05</span><span class="p">,</span>
        <span class="n">height_shift_range</span> <span class="o">=</span> <span class="mf">0.05</span><span class="p">,</span>
        <span class="c1"># shear_range = 0.2,
</span>        <span class="n">zoom_range</span> <span class="o">=</span> <span class="mf">0.05</span><span class="p">,</span>
        <span class="n">horizontal_flip</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
        <span class="n">fill_mode</span> <span class="o">=</span> <span class="s">'nearest'</span><span class="p">,</span>
        <span class="c1"># validation_split = 0.2
</span>    <span class="p">)</span>

    <span class="n">validation_datagen</span> <span class="o">=</span> <span class="nc">ImageDataGenerator</span><span class="p">(</span>
        <span class="n">rescale</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="mf">255.0</span><span class="p">,</span>
    <span class="p">)</span>

    <span class="n">train_generator</span> <span class="o">=</span> <span class="n">train_datagen</span><span class="p">.</span><span class="nf">flow_from_directory</span><span class="p">(</span>
        <span class="n">TRAINING_DIR</span><span class="p">,</span>
        <span class="n">target_size</span> <span class="o">=</span> <span class="p">(</span><span class="mi">300</span><span class="p">,</span><span class="mi">300</span><span class="p">),</span>
        <span class="n">batch_size</span> <span class="o">=</span> <span class="mi">32</span><span class="p">,</span>
        <span class="n">class_mode</span> <span class="o">=</span> <span class="s">'binary'</span> 
    <span class="p">)</span>

    <span class="n">validation_generator</span> <span class="o">=</span> <span class="n">validation_datagen</span><span class="p">.</span><span class="nf">flow_from_directory</span><span class="p">(</span>
        <span class="n">VALIDATION_DIR</span><span class="p">,</span>
        <span class="n">target_size</span> <span class="o">=</span> <span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">300</span><span class="p">),</span>
        <span class="n">batch_size</span> <span class="o">=</span> <span class="mi">32</span><span class="p">,</span>
        <span class="n">class_mode</span> <span class="o">=</span> <span class="s">'binary'</span> 
    <span class="p">)</span>

    <span class="n">transfer_model</span> <span class="o">=</span> <span class="nc">VGG16</span><span class="p">(</span><span class="n">weights</span><span class="o">=</span><span class="s">'imagenet'</span><span class="p">,</span> <span class="n">include_top</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">input_shape</span><span class="o">=</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">300</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span> 
    <span class="n">transfer_model</span><span class="p">.</span><span class="n">trainable</span><span class="o">=</span><span class="bp">False</span>

    <span class="n">model</span> <span class="o">=</span> <span class="nc">Sequential</span><span class="p">([</span>
                        <span class="c1"># Conv2D(16, (3,3), activation='relu', input_shape = (300, 300, 3)),
</span>                        <span class="c1"># MaxPooling2D(2,2),
</span>                        <span class="c1"># Conv2D(32, (3,3), activation='relu'),
</span>                        <span class="c1"># MaxPooling2D(2,2),
</span>                        <span class="c1"># Conv2D(64, (3,3), activation='relu'),
</span>                        <span class="c1"># MaxPooling2D(2,2),
</span>                        <span class="c1"># Conv2D(64, (3,3), activation='relu'),
</span>                        <span class="c1"># MaxPooling2D(2,2),
</span>                        <span class="c1"># Conv2D(128, (3,3), activation='relu'),
</span>                        <span class="c1"># MaxPooling2D(2,2),
</span>                        <span class="n">transfer_model</span><span class="p">,</span>
                        <span class="nc">Flatten</span><span class="p">(),</span>
                        <span class="nc">Dropout</span><span class="p">(</span><span class="mf">0.5</span><span class="p">),</span>
                        <span class="nc">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">),</span>
                        <span class="nc">Dense</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">),</span>
                        <span class="nc">Dense</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'sigmoid'</span><span class="p">)</span>
    <span class="p">])</span>

    <span class="n">model</span><span class="p">.</span><span class="nf">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="s">'adam'</span><span class="p">,</span> <span class="n">loss</span><span class="o">=</span><span class="s">'binary_crossentropy'</span><span class="p">,</span> <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'acc'</span><span class="p">])</span>

    <span class="n">checkpoint_path</span> <span class="o">=</span> <span class="s">'tmp_checkpoint.ckpt'</span>
    <span class="n">checkpoint</span> <span class="o">=</span> <span class="nc">ModelCheckpoint</span><span class="p">(</span><span class="n">filepath</span><span class="o">=</span><span class="n">checkpoint_path</span><span class="p">,</span>
                                 <span class="n">save_weights_only</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
                                 <span class="n">save_best_only</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
                                 <span class="n">monitor</span> <span class="o">=</span> <span class="s">'val_loss'</span><span class="p">,</span>
                                 <span class="n">verbose</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span>
    
    <span class="n">model</span><span class="p">.</span><span class="nf">fit</span><span class="p">(</span><span class="n">train_generator</span><span class="p">,</span>
              <span class="n">validation_data</span> <span class="o">=</span> <span class="p">(</span><span class="n">validation_generator</span><span class="p">),</span>
              <span class="n">epochs</span><span class="o">=</span><span class="mi">25</span><span class="p">,</span>
              <span class="n">callbacks</span><span class="o">=</span><span class="p">[</span><span class="n">checkpoint</span><span class="p">])</span>
    
    <span class="n">model</span><span class="p">.</span><span class="nf">load_weights</span><span class="p">(</span><span class="n">checkpoint_path</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">model</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="n">model</span> <span class="o">=</span> <span class="nf">solution_model</span><span class="p">()</span>
    <span class="n">model</span><span class="p">.</span><span class="nf">save</span><span class="p">(</span><span class="s">"TF3-horses-or-humans-type-B.h5"</span><span class="p">)</span>
</code></pre></div></div>
:ET