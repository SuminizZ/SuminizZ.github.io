I"ç/<h2 id="outlines"><strong>Outlines</strong></h2>
<ul>
  <li><a href="#references"><strong>References</strong></a></li>
  <li><a href="#inception-v2-v3-architecture"><strong>Inception v2-v3 Architecture</strong></a></li>
  <li><a href="#label-smoothing"><strong>Label Smoothing</strong></a></li>
  <li><a href="#implementation-with-pytorch"><strong>Implementation with PyTorch</strong></a></li>
  <li><a href="#model-summary"><strong>Model Summary</strong></a></li>
  <li><a href="#forward-pass"><strong>Forward Pass</strong></a></li>
</ul>

<p><br /></p>

<h2 id="references"><strong>References</strong></h2>
<ul>
  <li><a href="https://arxiv.org/abs/1512.00567" target="_blank">Rethinking the Inception Architecture for Computer Vision, Christian Szegedy (2015)</a></li>
  <li><a href="https://hyukppen.modoo.at/?link=5db82s6p" target="_blank">https://hyukppen.modoo.at/?link=5db82s6p</a></li>
</ul>

<p><br /></p>

<h2 id="inception-v2-v3-architecture"><strong>Inception v2-v3 Architecture</strong></h2>

<p>â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ<img width="400" alt="image" src="https://github.com/SuminizZ/Physics/assets/92680829/f64a93a6-9a39-448d-9eb6-b5976bbc7fc1" /><br /></p>

<p><strong>Figrue 5 :</strong> <br />â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ<img src="https://github.com/SuminizZ/Physics/assets/92680829/8801af4a-48c3-4fb6-a67d-6d633359e160" width="250" /><br />
<strong>Figrue 6:</strong> <br />â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ<img src="https://github.com/SuminizZ/Physics/assets/92680829/0266e727-eca7-4005-a1d3-39dcebd1bbff" width="250" /><br />
<strong>Figrue 7 :</strong> <br />â€ƒâ€ƒâ€ƒâ€ƒâ€ƒâ€ƒ<img src="https://github.com/SuminizZ/Physics/assets/92680829/60e7ccca-ce7a-4e3a-9d91-0b5b431f3da0" width="250" /><br /></p>

<p><br /></p>

<p><strong>1. Add alternative ways to factorize convolution and inception</strong></p>

<p><img src="https://github.com/SuminizZ/Physics/assets/92680829/0083b71e-4e16-44f5-a483-2ae07d8d32ac" width="230px" />
<img src="https://github.com/SuminizZ/Physics/assets/92680829/168e9439-36fc-4424-9e31-49d4ae75db19" width="230px" /></p>

<ul>
  <li>5x5 -&gt; 3x3 + 3x3
    <ul>
      <li>avoid representational bottleneck (factorizing large receptive field into multiples of small ones)</li>
      <li>parameter reduction : locally adjacent pixels share parameters</li>
      <li>spatial aggregation : factorizing itself creates strong correlation between adjacent units (less loss of spatial information during reduction)</li>
    </ul>
  </li>
  <li>nxn -&gt; 1xn + nx1
    <ul>
      <li>effect dramatically increases as n grows</li>
      <li>works better for medium grid-sizes (feature maps)</li>
      <li>7 is suggested as optimal in the paper</li>
    </ul>
  </li>
</ul>

<p><strong>2. Parallel use of stride 2 convolution and pooling to decrease grid-size</strong></p>

<p><img src="https://github.com/SuminizZ/Physics/assets/92680829/8d33a9ac-8ebc-4921-879f-803080aaea6b" width="400" /></p>

<ul>
  <li>Prevent representational bottlenecks and improve computational cost saving at the same time</li>
  <li>can reduce loss of representational information while decreasing the grid size</li>
</ul>

<p><strong>3. Inception v2 -&gt; v3 : Use RMSProp, Label Smoothing, BN-auxiliary</strong></p>

<ul>
  <li>remove lower auxiliary layer (doesnâ€™t contribute to performance at all)</li>
  <li>but network with second (upper) aux classifier does overtake the network without aux near the end of the training (not in the early stages)</li>
  <li>but this effect doesnâ€™t seems to be related to increased gradient signals of lower features as expected in inception v1 paper.</li>
  <li>Instead, it seems to be associated with regularization effect due to the batch normalization added to side branch.</li>
  <li>BN acts as a regularizer by normalizing the activations (making sure subsequent layers to recieve inputs within a constant rage and prevent extreme activation, saturation, and inputs from entering into the non-linear regime of activation function)</li>
</ul>

<p><br /></p>

<h2 id="label-smoothing"><strong>Label Smoothing</strong></h2>

<p>â€ƒ<img src="https://github.com/SuminizZ/Physics/assets/92680829/6d04922a-7bea-4fef-9ed7-f06470109923" /></p>

<p><br /></p>

<h2 id="implementation-with-pytorch"><strong>Implementation with PyTorch</strong></h2>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">BasicConv2d</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_channel</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="n">size</span><span class="p">,</span> <span class="n">stride</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">layer</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Conv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="n">size</span><span class="p">,</span> <span class="n">stride</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="n">padding</span><span class="p">),</span>
                                   <span class="n">nn</span><span class="p">.</span><span class="n">BatchNorm2d</span><span class="p">(</span><span class="n">F</span><span class="p">),</span>
                                   <span class="n">nn</span><span class="p">.</span><span class="n">ReLU</span><span class="p">())</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">out</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">layer</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">out</span> 


<span class="k">class</span> <span class="nc">InceptionA</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_channel</span><span class="p">,</span> <span class="n">final_F</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">final_F</span> <span class="o">=</span> <span class="n">final_F</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_5x5</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_3x3</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">48</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">48</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_pool</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
                                         <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_1x1</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">x_concat</span> <span class="o">=</span> <span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">branch_5x5</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_3x3</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_pool</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_1x1</span><span class="p">(</span><span class="n">x</span><span class="p">)]</span>
        <span class="n">x_concat</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">cat</span><span class="p">(</span><span class="n">x_concat</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>   <span class="c1"># N,F,H,W
</span>        <span class="k">assert</span> <span class="n">x_concat</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="bp">self</span><span class="p">.</span><span class="n">final_F</span>
        
        <span class="k">return</span> <span class="n">x_concat</span>


<span class="k">class</span> <span class="nc">InceptionB</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_channel</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="n">final_F</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">final_F</span> <span class="o">=</span> <span class="n">final_F</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_2n</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">F</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">F</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">F</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">F</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_n</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">F</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">7</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">)),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">F</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">0</span><span class="p">)))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_pool</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
                                         <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_1x1</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">x_concat</span> <span class="o">=</span> <span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">branch_2n</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_n</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_pool</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_1x1</span><span class="p">(</span><span class="n">x</span><span class="p">)]</span>
        <span class="n">x_concat</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">cat</span><span class="p">(</span><span class="n">x_concat</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>   <span class="c1"># N,F,H,W
</span>        <span class="k">assert</span> <span class="n">x_concat</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="bp">self</span><span class="p">.</span><span class="n">final_F</span>
        
        <span class="k">return</span> <span class="n">x_concat</span>


<span class="k">class</span> <span class="nc">GridReduc</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_channel</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="n">final_F</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">final_F</span> <span class="o">=</span> <span class="n">final_F</span>
        <span class="n">F0</span><span class="p">,</span> <span class="n">F1</span><span class="p">,</span> <span class="n">F2</span> <span class="o">=</span> <span class="n">Fs</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">convstride_5x5</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">F0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                            <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">F0</span><span class="p">,</span> <span class="n">F1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
                                            <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">F1</span><span class="p">,</span> <span class="n">F1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">convstride_3x3</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">F0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                            <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">F0</span><span class="p">,</span> <span class="n">F2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">poolstride</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">x_concat</span> <span class="o">=</span> <span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">convstride_5x5</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">convstride_3x3</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">poolstride</span><span class="p">(</span><span class="n">x</span><span class="p">)]</span>
        <span class="n">x_concat</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">cat</span><span class="p">(</span><span class="n">x_concat</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>   <span class="c1"># N,F,H,W
</span>        <span class="k">assert</span> <span class="n">x_concat</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="bp">self</span><span class="p">.</span><span class="n">final_F</span>
        
        <span class="k">return</span> <span class="n">x_concat</span>


<span class="k">class</span> <span class="nc">InceptionC</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_channel</span><span class="p">,</span> <span class="n">final_F</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">final_F</span> <span class="o">=</span> <span class="n">final_F</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_5x5</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">448</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                        <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">448</span><span class="p">,</span> <span class="mi">384</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_5x5_1</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">branch_5x5</span><span class="p">,</span>
                                          <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">384</span><span class="p">,</span> <span class="mi">384</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_5x5_2</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">branch_5x5</span><span class="p">,</span>
                                          <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">384</span><span class="p">,</span> <span class="mi">384</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)))</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">branch_3x3</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">384</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_3x3_1</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">branch_3x3</span><span class="p">,</span>
                                          <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">384</span><span class="p">,</span> <span class="mi">384</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_3x3_2</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">branch_3x3</span><span class="p">,</span>
                                          <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">384</span><span class="p">,</span> <span class="mi">384</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">)))</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">branch_pool</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
                                         <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">branch_1x1</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">branch_5x5_concat</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">cat</span><span class="p">([</span><span class="bp">self</span><span class="p">.</span><span class="n">branch_5x5_1</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_5x5_2</span><span class="p">(</span><span class="n">x</span><span class="p">)],</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">branch_3x3_concat</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">cat</span><span class="p">([</span><span class="bp">self</span><span class="p">.</span><span class="n">branch_3x3_1</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_3x3_2</span><span class="p">(</span><span class="n">x</span><span class="p">)],</span> <span class="mi">1</span><span class="p">)</span>

        <span class="n">x_concat</span> <span class="o">=</span> <span class="p">[</span><span class="n">branch_5x5_concat</span><span class="p">,</span> <span class="n">branch_3x3_concat</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_pool</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">branch_1x1</span><span class="p">(</span><span class="n">x</span><span class="p">)]</span>
        <span class="n">x_concat</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">cat</span><span class="p">(</span><span class="n">x_concat</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>   <span class="c1"># N,F,H,W
</span>        <span class="k">assert</span> <span class="n">x_concat</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="bp">self</span><span class="p">.</span><span class="n">final_F</span>
        
        <span class="k">return</span> <span class="n">x_concat</span>


<span class="k">class</span> <span class="nc">AuxOut</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>  
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_channel</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">num_classes</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">avgpool_conv</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">AvgPool2d</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                          <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">1024</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                          <span class="n">nn</span><span class="p">.</span><span class="n">AdaptiveAvgPool2d</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">dropout</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Dropout</span><span class="p">(</span><span class="n">p</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">classifier</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">1024</span><span class="p">,</span> <span class="n">num_classes</span><span class="p">)</span>
        
    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">avgpool_conv</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">flatten</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">out</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">classifier</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">out</span> 


<span class="k">class</span> <span class="nc">Inception_V3</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">init_weights</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">use_aux</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">in_channel</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">num_classes</span><span class="o">=</span><span class="mi">1000</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">use_aux</span> <span class="o">=</span> <span class="n">use_aux</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">conv1a</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">conv1b</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">conv1c</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">maxpool1</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">conv2a</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">conv2b</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">80</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">conv2c</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">192</span><span class="p">,</span> <span class="mi">288</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

        <span class="c1">#  inceptionA x 2 + GridReduc x 1 : input = (35x35x288), output = (17x17x768)
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">inceptionA_1</span> <span class="o">=</span> <span class="n">InceptionA</span><span class="p">(</span><span class="mi">288</span><span class="p">,</span> <span class="mi">288</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inceptionA_2</span> <span class="o">=</span> <span class="n">InceptionA</span><span class="p">(</span><span class="mi">288</span><span class="p">,</span> <span class="mi">288</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">gridreducA</span> <span class="o">=</span> <span class="n">GridReduc</span><span class="p">(</span><span class="mi">288</span><span class="p">,</span> <span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">384</span><span class="p">),</span> <span class="mi">768</span><span class="p">)</span>

        <span class="c1">#  inceptionB x 4 + GridReduc x 1 : input = (17x17x768), output = (8x8x1280)
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">inceptionB_1</span> <span class="o">=</span> <span class="n">InceptionB</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">768</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inceptionB_2</span> <span class="o">=</span> <span class="n">InceptionB</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="mi">160</span><span class="p">,</span> <span class="mi">768</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inceptionB_3</span> <span class="o">=</span> <span class="n">InceptionB</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="mi">160</span><span class="p">,</span> <span class="mi">768</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inceptionB_4</span> <span class="o">=</span> <span class="n">InceptionB</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="mi">768</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">gridreducB</span> <span class="o">=</span> <span class="n">GridReduc</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="p">(</span><span class="mi">192</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="mi">320</span><span class="p">),</span> <span class="mi">1280</span><span class="p">)</span>

        <span class="c1">#  inceptionC x 2 : out feature maps 2048
</span>        <span class="bp">self</span><span class="p">.</span><span class="n">inceptionC_1</span> <span class="o">=</span> <span class="n">InceptionC</span><span class="p">(</span><span class="mi">1280</span><span class="p">,</span> <span class="mi">2048</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inceptionC_2</span> <span class="o">=</span> <span class="n">InceptionC</span><span class="p">(</span><span class="mi">2048</span><span class="p">,</span> <span class="mi">2048</span><span class="p">)</span>   <span class="c1"># 8x8x2048
</span>
        <span class="k">if</span> <span class="n">use_aux</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">aux</span> <span class="o">=</span> <span class="n">AuxOut</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">num_classes</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">aux</span> <span class="o">=</span> <span class="bp">None</span>
        
        <span class="bp">self</span><span class="p">.</span><span class="n">gap</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">AdaptiveAvgPool2d</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">dropout</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Dropout</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">classifier</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">2048</span><span class="p">,</span> <span class="n">num_classes</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">init_weights</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">modules</span><span class="p">():</span>
                <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">nn</span><span class="p">.</span><span class="n">Conv2d</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">nn</span><span class="p">.</span><span class="n">Conv2d</span><span class="p">):</span>
                    <span class="n">nn</span><span class="p">.</span><span class="n">init</span><span class="p">.</span><span class="n">trunc_normal_</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">weight</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">1e-2</span><span class="p">,</span> <span class="n">a</span><span class="o">=-</span><span class="mi">2</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">m</span><span class="p">.</span><span class="n">bias</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
                        <span class="n">nn</span><span class="p">.</span><span class="n">init</span><span class="p">.</span><span class="n">constant_</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">bias</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
                <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">nn</span><span class="p">.</span><span class="n">BatchNorm2d</span><span class="p">):</span>
                    <span class="n">nn</span><span class="p">.</span><span class="n">init</span><span class="p">.</span><span class="n">constant_</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">weight</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
                    <span class="n">nn</span><span class="p">.</span><span class="n">init</span><span class="p">.</span><span class="n">constant_</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">bias</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv1a</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv1b</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv1c</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">maxpool1</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv2a</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv2b</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv2c</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inceptionA_1</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inceptionA_2</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">gridreducA</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

        <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">training</span> <span class="ow">and</span> <span class="bp">self</span><span class="p">.</span><span class="n">aux</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">aux_out</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">aux</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span> <span class="n">aux_out</span> <span class="o">=</span> <span class="bp">None</span>

        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inceptionB_1</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inceptionB_2</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inceptionB_3</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inceptionB_4</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">gridreducB</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inceptionC_1</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inceptionC_2</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">gap</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">flatten</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">out</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">classifier</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">aux_out</span><span class="p">,</span> <span class="n">out</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="model-summary"><strong>Model Summary</strong></h2>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span> <span class="o">=</span> <span class="n">Inception_V3</span><span class="p">()</span>
<span class="n">summary</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">input_size</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">299</span><span class="p">,</span> <span class="mi">299</span><span class="p">),</span> <span class="n">device</span><span class="o">=</span><span class="s">'cpu'</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>====================================================================================================
Layer (type:depth-idx)                             Output Shape              Param #
====================================================================================================
Inception_V3                                       --                        1,814,504
â”œâ”€BasicConv2d: 1-1                                 [2, 32, 149, 149]         --
â”‚    â””â”€Sequential: 2-1                             [2, 32, 149, 149]         --
â”‚    â”‚    â””â”€Conv2d: 3-1                            [2, 32, 149, 149]         896
â”‚    â”‚    â””â”€BatchNorm2d: 3-2                       [2, 32, 149, 149]         64
â”‚    â”‚    â””â”€ReLU: 3-3                              [2, 32, 149, 149]         --
â”œâ”€BasicConv2d: 1-2                                 [2, 32, 147, 147]         --
â”‚    â””â”€Sequential: 2-2                             [2, 32, 147, 147]         --
â”‚    â”‚    â””â”€Conv2d: 3-4                            [2, 32, 147, 147]         9,248
â”‚    â”‚    â””â”€BatchNorm2d: 3-5                       [2, 32, 147, 147]         64
â”‚    â”‚    â””â”€ReLU: 3-6                              [2, 32, 147, 147]         --
â”œâ”€BasicConv2d: 1-3                                 [2, 64, 147, 147]         --
â”‚    â””â”€Sequential: 2-3                             [2, 64, 147, 147]         --
â”‚    â”‚    â””â”€Conv2d: 3-7                            [2, 64, 147, 147]         18,496
â”‚    â”‚    â””â”€BatchNorm2d: 3-8                       [2, 64, 147, 147]         128
â”‚    â”‚    â””â”€ReLU: 3-9                              [2, 64, 147, 147]         --
â”œâ”€MaxPool2d: 1-4                                   [2, 64, 73, 73]           --
â”œâ”€BasicConv2d: 1-5                                 [2, 80, 71, 71]           --
â”‚    â””â”€Sequential: 2-4                             [2, 80, 71, 71]           --
â”‚    â”‚    â””â”€Conv2d: 3-10                           [2, 80, 71, 71]           46,160
â”‚    â”‚    â””â”€BatchNorm2d: 3-11                      [2, 80, 71, 71]           160
â”‚    â”‚    â””â”€ReLU: 3-12                             [2, 80, 71, 71]           --
â”œâ”€BasicConv2d: 1-6                                 [2, 192, 35, 35]          --
â”‚    â””â”€Sequential: 2-5                             [2, 192, 35, 35]          --
â”‚    â”‚    â””â”€Conv2d: 3-13                           [2, 192, 35, 35]          138,432
â”‚    â”‚    â””â”€BatchNorm2d: 3-14                      [2, 192, 35, 35]          384
â”‚    â”‚    â””â”€ReLU: 3-15                             [2, 192, 35, 35]          --
â”œâ”€BasicConv2d: 1-7                                 [2, 288, 35, 35]          --
â”‚    â””â”€Sequential: 2-6                             [2, 288, 35, 35]          --
â”‚    â”‚    â””â”€Conv2d: 3-16                           [2, 288, 35, 35]          497,952
â”‚    â”‚    â””â”€BatchNorm2d: 3-17                      [2, 288, 35, 35]          576
â”‚    â”‚    â””â”€ReLU: 3-18                             [2, 288, 35, 35]          --
â”œâ”€InceptionA: 1-8                                  [2, 288, 35, 35]          --
â”‚    â””â”€Sequential: 2-7                             [2, 96, 35, 35]           --
â”‚    â”‚    â””â”€BasicConv2d: 3-19                      [2, 64, 35, 35]           18,624
â”‚    â”‚    â””â”€BasicConv2d: 3-20                      [2, 64, 35, 35]           37,056
â”‚    â”‚    â””â”€BasicConv2d: 3-21                      [2, 96, 35, 35]           55,584
â”‚    â””â”€Sequential: 2-8                             [2, 64, 35, 35]           --
â”‚    â”‚    â””â”€BasicConv2d: 3-22                      [2, 48, 35, 35]           13,968
â”‚    â”‚    â””â”€BasicConv2d: 3-23                      [2, 64, 35, 35]           27,840
â”‚    â””â”€Sequential: 2-9                             [2, 64, 35, 35]           --
â”‚    â”‚    â””â”€MaxPool2d: 3-24                        [2, 288, 35, 35]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-25                      [2, 64, 35, 35]           18,624
â”‚    â””â”€BasicConv2d: 2-10                           [2, 64, 35, 35]           --
â”‚    â”‚    â””â”€Sequential: 3-26                       [2, 64, 35, 35]           18,624
â”œâ”€InceptionA: 1-9                                  [2, 288, 35, 35]          --
â”‚    â””â”€Sequential: 2-11                            [2, 96, 35, 35]           --
â”‚    â”‚    â””â”€BasicConv2d: 3-27                      [2, 64, 35, 35]           18,624
â”‚    â”‚    â””â”€BasicConv2d: 3-28                      [2, 64, 35, 35]           37,056
â”‚    â”‚    â””â”€BasicConv2d: 3-29                      [2, 96, 35, 35]           55,584
â”‚    â””â”€Sequential: 2-12                            [2, 64, 35, 35]           --
â”‚    â”‚    â””â”€BasicConv2d: 3-30                      [2, 48, 35, 35]           13,968
â”‚    â”‚    â””â”€BasicConv2d: 3-31                      [2, 64, 35, 35]           27,840
â”‚    â””â”€Sequential: 2-13                            [2, 64, 35, 35]           --
â”‚    â”‚    â””â”€MaxPool2d: 3-32                        [2, 288, 35, 35]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-33                      [2, 64, 35, 35]           18,624
â”‚    â””â”€BasicConv2d: 2-14                           [2, 64, 35, 35]           --
â”‚    â”‚    â””â”€Sequential: 3-34                       [2, 64, 35, 35]           18,624
â”œâ”€GridReduc: 1-10                                  [2, 768, 17, 17]          --
â”‚    â””â”€Sequential: 2-15                            [2, 96, 17, 17]           --
â”‚    â”‚    â””â”€BasicConv2d: 3-35                      [2, 64, 35, 35]           18,624
â”‚    â”‚    â””â”€BasicConv2d: 3-36                      [2, 96, 35, 35]           55,584
â”‚    â”‚    â””â”€BasicConv2d: 3-37                      [2, 96, 17, 17]           83,232
â”‚    â””â”€Sequential: 2-16                            [2, 384, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-38                      [2, 64, 35, 35]           18,624
â”‚    â”‚    â””â”€BasicConv2d: 3-39                      [2, 384, 17, 17]          222,336
â”‚    â””â”€MaxPool2d: 2-17                             [2, 288, 17, 17]          --
â”œâ”€InceptionB: 1-11                                 [2, 768, 17, 17]          --
â”‚    â””â”€Sequential: 2-18                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-40                      [2, 128, 17, 17]          98,688
â”‚    â”‚    â””â”€BasicConv2d: 3-41                      [2, 128, 17, 17]          115,072
â”‚    â”‚    â””â”€BasicConv2d: 3-42                      [2, 128, 17, 17]          115,072
â”‚    â”‚    â””â”€BasicConv2d: 3-43                      [2, 128, 17, 17]          115,072
â”‚    â”‚    â””â”€BasicConv2d: 3-44                      [2, 192, 17, 17]          172,608
â”‚    â””â”€Sequential: 2-19                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-45                      [2, 128, 17, 17]          98,688
â”‚    â”‚    â””â”€BasicConv2d: 3-46                      [2, 128, 17, 17]          115,072
â”‚    â”‚    â””â”€BasicConv2d: 3-47                      [2, 192, 17, 17]          172,608
â”‚    â””â”€Sequential: 2-20                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€MaxPool2d: 3-48                        [2, 768, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-49                      [2, 192, 17, 17]          148,032
â”‚    â””â”€BasicConv2d: 2-21                           [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€Sequential: 3-50                       [2, 192, 17, 17]          148,032
â”œâ”€InceptionB: 1-12                                 [2, 768, 17, 17]          --
â”‚    â””â”€Sequential: 2-22                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-51                      [2, 160, 17, 17]          123,360
â”‚    â”‚    â””â”€BasicConv2d: 3-52                      [2, 160, 17, 17]          179,680
â”‚    â”‚    â””â”€BasicConv2d: 3-53                      [2, 160, 17, 17]          179,680
â”‚    â”‚    â””â”€BasicConv2d: 3-54                      [2, 160, 17, 17]          179,680
â”‚    â”‚    â””â”€BasicConv2d: 3-55                      [2, 192, 17, 17]          215,616
â”‚    â””â”€Sequential: 2-23                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-56                      [2, 160, 17, 17]          123,360
â”‚    â”‚    â””â”€BasicConv2d: 3-57                      [2, 160, 17, 17]          179,680
â”‚    â”‚    â””â”€BasicConv2d: 3-58                      [2, 192, 17, 17]          215,616
â”‚    â””â”€Sequential: 2-24                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€MaxPool2d: 3-59                        [2, 768, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-60                      [2, 192, 17, 17]          148,032
â”‚    â””â”€BasicConv2d: 2-25                           [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€Sequential: 3-61                       [2, 192, 17, 17]          148,032
â”œâ”€InceptionB: 1-13                                 [2, 768, 17, 17]          --
â”‚    â””â”€Sequential: 2-26                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-62                      [2, 160, 17, 17]          123,360
â”‚    â”‚    â””â”€BasicConv2d: 3-63                      [2, 160, 17, 17]          179,680
â”‚    â”‚    â””â”€BasicConv2d: 3-64                      [2, 160, 17, 17]          179,680
â”‚    â”‚    â””â”€BasicConv2d: 3-65                      [2, 160, 17, 17]          179,680
â”‚    â”‚    â””â”€BasicConv2d: 3-66                      [2, 192, 17, 17]          215,616
â”‚    â””â”€Sequential: 2-27                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-67                      [2, 160, 17, 17]          123,360
â”‚    â”‚    â””â”€BasicConv2d: 3-68                      [2, 160, 17, 17]          179,680
â”‚    â”‚    â””â”€BasicConv2d: 3-69                      [2, 192, 17, 17]          215,616
â”‚    â””â”€Sequential: 2-28                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€MaxPool2d: 3-70                        [2, 768, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-71                      [2, 192, 17, 17]          148,032
â”‚    â””â”€BasicConv2d: 2-29                           [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€Sequential: 3-72                       [2, 192, 17, 17]          148,032
â”œâ”€InceptionB: 1-14                                 [2, 768, 17, 17]          --
â”‚    â””â”€Sequential: 2-30                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-73                      [2, 192, 17, 17]          148,032
â”‚    â”‚    â””â”€BasicConv2d: 3-74                      [2, 192, 17, 17]          258,624
â”‚    â”‚    â””â”€BasicConv2d: 3-75                      [2, 192, 17, 17]          258,624
â”‚    â”‚    â””â”€BasicConv2d: 3-76                      [2, 192, 17, 17]          258,624
â”‚    â”‚    â””â”€BasicConv2d: 3-77                      [2, 192, 17, 17]          258,624
â”‚    â””â”€Sequential: 2-31                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-78                      [2, 192, 17, 17]          148,032
â”‚    â”‚    â””â”€BasicConv2d: 3-79                      [2, 192, 17, 17]          258,624
â”‚    â”‚    â””â”€BasicConv2d: 3-80                      [2, 192, 17, 17]          258,624
â”‚    â””â”€Sequential: 2-32                            [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€MaxPool2d: 3-81                        [2, 768, 17, 17]          --
â”‚    â”‚    â””â”€BasicConv2d: 3-82                      [2, 192, 17, 17]          148,032
â”‚    â””â”€BasicConv2d: 2-33                           [2, 192, 17, 17]          --
â”‚    â”‚    â””â”€Sequential: 3-83                       [2, 192, 17, 17]          148,032
â”œâ”€GridReduc: 1-15                                  [2, 1280, 8, 8]           --
â”‚    â””â”€Sequential: 2-34                            [2, 192, 8, 8]            --
â”‚    â”‚    â””â”€BasicConv2d: 3-84                      [2, 192, 17, 17]          148,032
â”‚    â”‚    â””â”€BasicConv2d: 3-85                      [2, 192, 17, 17]          332,352
â”‚    â”‚    â””â”€BasicConv2d: 3-86                      [2, 192, 8, 8]            332,352
â”‚    â””â”€Sequential: 2-35                            [2, 320, 8, 8]            --
â”‚    â”‚    â””â”€BasicConv2d: 3-87                      [2, 192, 17, 17]          148,032
â”‚    â”‚    â””â”€BasicConv2d: 3-88                      [2, 320, 8, 8]            553,920
â”‚    â””â”€MaxPool2d: 2-36                             [2, 768, 8, 8]            --
â”œâ”€InceptionC: 1-16                                 [2, 2048, 8, 8]           --
â”‚    â””â”€Sequential: 2-37                            [2, 384, 8, 8]            2,567,744
â”‚    â””â”€Sequential: 2-38                            --                        (recursive)
â”‚    â”‚    â””â”€Sequential: 3-89                       [2, 384, 8, 8]            2,124,224
â”‚    â””â”€Sequential: 2-39                            --                        (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-90                      [2, 384, 8, 8]            443,520
â”‚    â””â”€Sequential: 2-40                            [2, 384, 8, 8]            2,124,224
â”‚    â”‚    â””â”€Sequential: 3-91                       [2, 384, 8, 8]            (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-92                      [2, 384, 8, 8]            443,520
â”‚    â””â”€Sequential: 2-41                            [2, 384, 8, 8]            936,192
â”‚    â””â”€Sequential: 2-42                            --                        (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-93                      [2, 384, 8, 8]            492,672
â”‚    â””â”€Sequential: 2-43                            --                        (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-94                      [2, 384, 8, 8]            443,520
â”‚    â””â”€Sequential: 2-44                            [2, 384, 8, 8]            492,672
â”‚    â”‚    â””â”€BasicConv2d: 3-95                      [2, 384, 8, 8]            (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-96                      [2, 384, 8, 8]            443,520
â”‚    â””â”€Sequential: 2-45                            [2, 192, 8, 8]            --
â”‚    â”‚    â””â”€MaxPool2d: 3-97                        [2, 1280, 8, 8]           --
â”‚    â”‚    â””â”€BasicConv2d: 3-98                      [2, 192, 8, 8]            246,336
â”‚    â””â”€BasicConv2d: 2-46                           [2, 320, 8, 8]            --
â”‚    â”‚    â””â”€Sequential: 3-99                       [2, 320, 8, 8]            410,560
â”œâ”€InceptionC: 1-17                                 [2, 2048, 8, 8]           --
â”‚    â””â”€Sequential: 2-47                            [2, 384, 8, 8]            2,911,808
â”‚    â””â”€Sequential: 2-48                            --                        (recursive)
â”‚    â”‚    â””â”€Sequential: 3-100                      [2, 384, 8, 8]            2,468,288
â”‚    â””â”€Sequential: 2-49                            --                        (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-101                     [2, 384, 8, 8]            443,520
â”‚    â””â”€Sequential: 2-50                            [2, 384, 8, 8]            2,468,288
â”‚    â”‚    â””â”€Sequential: 3-102                      [2, 384, 8, 8]            (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-103                     [2, 384, 8, 8]            443,520
â”‚    â””â”€Sequential: 2-51                            [2, 384, 8, 8]            1,231,104
â”‚    â””â”€Sequential: 2-52                            --                        (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-104                     [2, 384, 8, 8]            787,584
â”‚    â””â”€Sequential: 2-53                            --                        (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-105                     [2, 384, 8, 8]            443,520
â”‚    â””â”€Sequential: 2-54                            [2, 384, 8, 8]            787,584
â”‚    â”‚    â””â”€BasicConv2d: 3-106                     [2, 384, 8, 8]            (recursive)
â”‚    â”‚    â””â”€BasicConv2d: 3-107                     [2, 384, 8, 8]            443,520
â”‚    â””â”€Sequential: 2-55                            [2, 192, 8, 8]            --
â”‚    â”‚    â””â”€MaxPool2d: 3-108                       [2, 2048, 8, 8]           --
â”‚    â”‚    â””â”€BasicConv2d: 3-109                     [2, 192, 8, 8]            393,792
â”‚    â””â”€BasicConv2d: 2-56                           [2, 320, 8, 8]            --
â”‚    â”‚    â””â”€Sequential: 3-110                      [2, 320, 8, 8]            656,320
â”œâ”€AdaptiveAvgPool2d: 1-18                          [2, 2048, 1, 1]           --
â”œâ”€Dropout: 1-19                                    [2, 2048]                 --
â”œâ”€Linear: 1-20                                     [2, 1000]                 2,049,000
====================================================================================================
Total params: 38,345,632
Trainable params: 38,345,632
Non-trainable params: 0
Total mult-adds (G): 11.19
====================================================================================================
Input size (MB): 2.15
Forward/backward pass size (MB): 259.10
Params size (MB): 92.05
Estimated Total Size (MB): 353.29
====================================================================================================
</code></pre></div></div>

<p><br /></p>

<h2 id="forward-pass"><strong>Forward Pass</strong></h2>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">299</span><span class="p">,</span><span class="mi">299</span><span class="p">)</span>
<span class="n">aux_out</span><span class="p">,</span> <span class="n">out</span> <span class="o">=</span> <span class="n">model</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">aux_out</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">out</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>torch.Size([2, 1000])
torch.Size([2, 1000])
</code></pre></div></div>

:ET