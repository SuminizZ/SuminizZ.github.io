I"’<p><br /></p>

<h2 id="matlab-code-for-a--qr-factorization">MATLAB code for A = QR Factorization</h2>
<ul>
  <li>Gram-Schmidt</li>
  <li>Creates orthogonal columns from independent set of columns of A.</li>
  <li>R is an upper triangular matrix with the length of each projected column of A on its main diagonal.</li>
</ul>

<p><br /></p>

<h3 id="1-function-for-a--qr-factorization">1. Function for A = QR Factorization</h3>

<p><br /></p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function</span> <span class="p">[</span><span class="n">Q</span> <span class="n">R</span><span class="p">]</span> <span class="o">=</span> <span class="n">qr_factorize</span><span class="p">(</span><span class="n">A</span><span class="p">)</span>
<span class="c1">% A = QR factorization (Gram-Schmidt)</span>

<span class="p">[</span><span class="n">n</span><span class="p">,</span> <span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="nb">size</span><span class="p">(</span><span class="n">A</span><span class="p">);</span> 

<span class="k">for</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="n">n</span><span class="p">;</span>
    <span class="n">v</span> <span class="o">=</span> <span class="n">A</span><span class="p">(:,</span> <span class="n">j</span><span class="p">);</span>
    <span class="k">for</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">:</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
        <span class="n">R</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span> <span class="o">=</span> <span class="n">Q</span><span class="p">(:,</span> <span class="n">i</span><span class="p">)</span><span class="o">'*</span><span class="n">v</span><span class="p">;</span>
        <span class="n">v</span> <span class="o">=</span> <span class="n">v</span> <span class="o">-</span> <span class="n">Q</span><span class="p">(:,</span> <span class="n">i</span><span class="p">)</span><span class="o">*</span><span class="n">R</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
    <span class="k">end</span>
    <span class="n">R</span><span class="p">(</span><span class="n">j</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span> <span class="o">=</span> <span class="nb">norm</span><span class="p">(</span><span class="n">v</span><span class="p">);</span>
    <span class="n">Q</span><span class="p">(:,</span> <span class="n">j</span><span class="p">)</span> <span class="o">=</span> <span class="n">v</span><span class="p">/</span><span class="n">R</span><span class="p">(</span><span class="n">j</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
<span class="k">end</span> 
</code></pre></div></div>

<p><br /></p>

<h3 id="2-solve-lc--b--ux--c-to-get-solution-x-vector">2. Solve Lc = b &amp; Ux = c to get solution x vector</h3>
<ul>
  <li>Forward Elimination</li>
  <li>Backward Substitution</li>
</ul>

<p><br /></p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function</span> <span class="n">x</span> <span class="o">=</span> <span class="n">slv</span><span class="p">(</span><span class="n">A</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
<span class="c1">% Solve Ax = b using Lc=b and Ux=c</span>
<span class="p">[</span><span class="n">L</span><span class="p">,</span> <span class="n">U</span><span class="p">]</span> <span class="o">=</span> <span class="n">factorize</span><span class="p">(</span><span class="n">A</span><span class="p">)</span>
<span class="p">[</span><span class="n">n</span><span class="p">,</span> <span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="nb">size</span><span class="p">(</span><span class="n">A</span><span class="p">);</span>
<span class="n">s</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>  
<span class="n">t</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="k">for</span> <span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="p">:</span><span class="n">n</span>     <span class="c1">% Forward Elimination Lc = b to slove c </span>
    <span class="k">for</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">:</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span>
        <span class="n">s</span> <span class="o">=</span> <span class="n">s</span> <span class="o">+</span> <span class="n">L</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span><span class="o">*</span><span class="n">c</span><span class="p">(</span><span class="n">j</span><span class="p">);</span>
    <span class="k">end</span>
    <span class="n">c</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="o">=</span> <span class="n">b</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="o">-</span> <span class="n">s</span><span class="p">;</span>
    <span class="n">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
<span class="k">end</span>

<span class="k">for</span> <span class="n">k</span><span class="o">=</span><span class="n">n</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">:</span><span class="mi">1</span>     <span class="c1">% Back-Substitution with Ux = c to solve from x(n) to x(1)</span>
    <span class="k">for</span> <span class="n">j</span><span class="o">=</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">:</span><span class="n">n</span>     <span class="c1">% from diagnoal to end of row</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">t</span> <span class="o">+</span> <span class="n">U</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">j</span><span class="p">)</span><span class="o">*</span><span class="n">x</span><span class="p">(</span><span class="n">j</span><span class="p">);</span>  <span class="c1">% adds up U times previously earned x </span>
    <span class="k">end</span>
    <span class="n">x</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="n">c</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="o">-</span> <span class="n">t</span><span class="p">)/</span><span class="n">U</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">k</span><span class="p">);</span>  <span class="c1">% divide by pivot </span>
<span class="k">end</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">'</span><span class="p">;</span> 
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>Reference
    <ul>
      <li>Strang, Gilbert. Introduction to Linear Algebra. 4th ed (Chapter 2. Solving Linear Equation, p100)</li>
    </ul>
  </li>
</ul>

:ET