I"ZD<p><br /></p>

<h2 id="crawling-code">Crawling Code</h2>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span> <span class="k">as</span> <span class="n">wd</span>        
<span class="kn">from</span> <span class="n">selenium.webdriver.common.keys</span> <span class="kn">import</span> <span class="n">Keys</span>
<span class="kn">from</span> <span class="n">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
<span class="kn">import</span> <span class="n">re</span>
<span class="kn">import</span> <span class="n">datetime</span> <span class="k">as</span> <span class="n">dt</span>
<span class="kn">import</span> <span class="n">urllib.parse</span>             
<span class="kn">import</span> <span class="n">time</span>


<span class="k">def</span> <span class="nf">extract_text</span><span class="p">(</span><span class="n">posts</span><span class="p">):</span>            <span class="c1"># regex 로 유효한 텍스트만 정제
</span>    <span class="n">tagout</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">compile</span><span class="p">(</span><span class="s">'&lt;.*?&gt;'</span><span class="p">)</span>
    <span class="n">unicodeout</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">compile</span><span class="p">(</span><span class="sa">r</span><span class="s">'"[\\u]%d{4,5}"'</span><span class="p">)</span>
    <span class="n">ps</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">posts</span><span class="p">:</span>
        <span class="n">p</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">sub</span><span class="p">(</span><span class="n">tagout</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="nf">str</span><span class="p">(</span><span class="n">p</span><span class="p">))</span>
        <span class="n">p</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">sub</span><span class="p">(</span><span class="n">unicodeout</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="n">p</span><span class="p">)</span>
        <span class="n">p</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">sub</span><span class="p">(</span><span class="sa">r</span><span class="s">"[^ㄱ-ㅎㅏ-ㅣ가-힣 ]"</span><span class="p">,</span> <span class="s">""</span><span class="p">,</span> <span class="n">p</span><span class="p">)</span>
        <span class="n">ps</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">p</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">ps</span>


<span class="k">def</span> <span class="nf">get_posts</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">startdate</span><span class="p">):</span>
    <span class="n">driver</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>

    <span class="n">html</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="n">page_source</span>
    <span class="n">soup</span> <span class="o">=</span> <span class="nc">BeautifulSoup</span><span class="p">(</span><span class="n">html</span><span class="p">,</span><span class="s">'html.parser'</span><span class="p">)</span>
    <span class="n">last_height</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">execute_script</span><span class="p">(</span><span class="s">"return document.body.scrollHeight"</span><span class="p">)</span>
    
    <span class="n">weekly_post</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">weeklyfreq</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">posts</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="n">tmp</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="s">"a"</span><span class="p">,</span> <span class="p">{</span><span class="s">'class'</span> <span class="p">:</span> <span class="s">"api_txt_lines total_tit _cross_trigger"</span><span class="p">})</span>
    <span class="n">posts</span> <span class="o">+=</span> <span class="nf">extract_text</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
    <span class="n">weeklyfreq</span> <span class="o">+=</span> <span class="nf">len</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>

    <span class="n">tmp</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="s">"div"</span><span class="p">,</span>  <span class="p">{</span><span class="s">'class'</span> <span class="p">:</span> <span class="s">"total_group"</span><span class="p">})</span>
    <span class="n">posts</span> <span class="o">+=</span> <span class="nf">extract_text</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
    <span class="n">weeklyfreq</span> <span class="o">+=</span> <span class="nf">len</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>

    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
            <span class="n">driver</span><span class="p">.</span><span class="nf">execute_script</span><span class="p">(</span><span class="s">"window.scrollTo(0, document.body.scrollHeight)"</span><span class="p">)</span>
            <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mf">1.5</span><span class="p">)</span>
            <span class="n">new_height</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="nf">execute_script</span><span class="p">(</span><span class="s">"return document.body.scrollHeight"</span><span class="p">)</span>

            <span class="k">if</span> <span class="n">new_height</span> <span class="o">!=</span> <span class="n">last_height</span><span class="p">:</span>
                <span class="n">html</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="n">page_source</span>
                <span class="n">soup</span> <span class="o">=</span> <span class="nc">BeautifulSoup</span><span class="p">(</span><span class="n">html</span><span class="p">,</span><span class="s">'html.parser'</span><span class="p">)</span>
                
                <span class="n">tmp</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="s">"a"</span><span class="p">,</span> <span class="p">{</span><span class="s">'class'</span> <span class="p">:</span> <span class="s">"api_txt_lines total_tit _cross_trigger"</span><span class="p">})</span>
                <span class="n">posts</span> <span class="o">+=</span> <span class="nf">extract_text</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
                <span class="n">weeklyfreq</span> <span class="o">+=</span> <span class="nf">len</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>

                <span class="n">tmp</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="nf">find_all</span><span class="p">(</span><span class="s">"div"</span><span class="p">,</span>  <span class="p">{</span><span class="s">'class'</span> <span class="p">:</span> <span class="s">"total_group"</span><span class="p">})</span>
                <span class="n">posts</span> <span class="o">+=</span> <span class="nf">extract_text</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
                <span class="n">weeklyfreq</span> <span class="o">+=</span> <span class="nf">len</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
            <span class="k">else</span><span class="p">:</span>                                   <span class="c1"># 일별로 검색 후 끝까지 scroll 다 내림
</span>                <span class="n">weekly_post</span><span class="p">.</span><span class="nf">append</span><span class="p">([</span><span class="n">startdate</span><span class="p">,</span> <span class="n">weeklyfreq</span><span class="p">,</span> <span class="n">posts</span><span class="p">])</span>
                <span class="k">break</span>

            <span class="n">last_height</span> <span class="o">=</span> <span class="n">new_height</span>
    
    <span class="k">return</span> <span class="n">weekly_post</span>


<span class="k">def</span> <span class="nf">createDF</span><span class="p">(</span><span class="n">contents</span><span class="p">,</span> <span class="n">keyword</span><span class="p">,</span> <span class="n">tag</span><span class="p">):</span>
    <span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">contents</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'Date'</span><span class="p">,</span> <span class="s">'Weekly Frequency'</span><span class="p">,</span> <span class="s">'Tweets'</span><span class="p">])</span>
    <span class="n">df</span><span class="p">.</span><span class="nf">to_excel</span><span class="p">(</span><span class="s">"NAVER_"</span> <span class="o">+</span> <span class="n">keyword</span> <span class="o">+</span> <span class="s">"_"</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span> <span class="o">+</span> <span class="s">".xlsx"</span><span class="p">)</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>

    <span class="n">driver</span> <span class="o">=</span> <span class="n">wd</span><span class="p">.</span><span class="nc">Chrome</span><span class="p">(</span><span class="s">"chromedriver.exe"</span><span class="p">)</span>
    <span class="n">keywords</span> <span class="o">=</span> <span class="p">[</span><span class="s">"코로나, 감정"</span><span class="p">,</span> <span class="s">"코로나, 기분"</span><span class="p">,</span> <span class="s">"코로나, 일상"</span><span class="p">]</span>      <span class="c1"># 크롤링 키워드
</span>    <span class="n">years</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2020</span><span class="p">,</span> <span class="mi">2021</span><span class="p">]</span>        <span class="c1"># 크롤링하고자 하는 년도
</span>
    <span class="k">for</span> <span class="n">keyword</span> <span class="ow">in</span> <span class="n">keywords</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">year</span> <span class="ow">in</span> <span class="n">years</span><span class="p">:</span>
                <span class="n">contents</span> <span class="o">=</span> <span class="p">[]</span>
                <span class="k">if</span> <span class="n">year</span> <span class="o">==</span> <span class="mi">2020</span><span class="p">:</span> <span class="n">limit</span> <span class="o">=</span> <span class="mi">13</span>
                <span class="k">elif</span> <span class="n">year</span> <span class="o">==</span> <span class="mi">2021</span><span class="p">:</span> <span class="n">limit</span> <span class="o">=</span> <span class="mi">11</span>
                <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">limit</span><span class="p">):</span>
                    <span class="n">i</span> <span class="o">=</span> <span class="n">m</span>
                    <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="nf">str</span><span class="p">(</span><span class="n">m</span><span class="p">))</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span> <span class="n">m</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>      <span class="c1"># 20210607 이런 형식으로 날짜 입력해줘야 함
</span>                    <span class="n">base</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">year</span><span class="p">)</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
                    <span class="n">startdate</span> <span class="o">=</span> <span class="n">base</span> <span class="o">+</span> <span class="s">"01"</span>
                    
                    <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="p">[</span><span class="s">"07"</span><span class="p">,</span> <span class="s">"14"</span><span class="p">,</span> <span class="s">"21"</span><span class="p">,</span> <span class="s">"28"</span><span class="p">]:</span>      <span class="c1"># 7일 간격으로
</span>                        <span class="n">middate</span> <span class="o">=</span> <span class="n">base</span> <span class="o">+</span> <span class="n">d</span>
                        <span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"https://search.naver.com/search.naver?where=view&amp;query=</span><span class="si">{</span><span class="n">keyword</span><span class="si">}</span><span class="s">&amp;sm=tab_opt&amp;nso=so%3Ar%2Cp%3Afrom</span><span class="si">{</span><span class="n">startdate</span><span class="si">}</span><span class="s">to</span><span class="si">{</span><span class="n">middate</span><span class="si">}</span><span class="s">%2Ca%3Aall&amp;mode=normal&amp;main_q=&amp;st_coll=&amp;topic_r_cat="</span>
                        <span class="n">contents</span> <span class="o">+=</span> <span class="nf">get_posts</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">startdate</span><span class="p">)</span>
                        <span class="n">startdate</span> <span class="o">=</span> <span class="n">middate</span>
                        <span class="c1"># print(i)
</span>                        
                    <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">6</span> <span class="ow">or</span> <span class="n">i</span> <span class="o">==</span> <span class="n">limit</span><span class="o">-</span><span class="mi">1</span><span class="p">:</span>
                        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="mi">6</span><span class="p">:</span> <span class="n">add</span> <span class="o">=</span> <span class="s">"_상반기"</span>
                        <span class="k">elif</span> <span class="n">i</span> <span class="o">==</span> <span class="n">limit</span><span class="o">-</span><span class="mi">1</span><span class="p">:</span> <span class="n">add</span> <span class="o">=</span> <span class="s">"_하반기"</span>
                        <span class="n">tag</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">year</span><span class="p">)</span> <span class="o">+</span> <span class="s">"년"</span> <span class="o">+</span> <span class="n">add</span>
                        <span class="nf">createDF</span><span class="p">(</span><span class="n">contents</span><span class="p">,</span> <span class="n">keyword</span><span class="p">,</span> <span class="n">tag</span><span class="p">)</span>
                        <span class="n">contents</span> <span class="o">=</span> <span class="p">[]</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>html class 가 꽤나 자주 변경되는 거 같으니 find_all 을 사용할 때 원하는 요소의 html class 를 잘 확인해봐야 한다.</li>
  <li>검색 결과로 나온 게시글들 전문을 가져오려면 시간이 너무 오래 걸릴 거 같아 포스팅 창을 열지않고 제목, 미리보기로 노출되는 부분만 가져왔다.</li>
</ul>
:ET