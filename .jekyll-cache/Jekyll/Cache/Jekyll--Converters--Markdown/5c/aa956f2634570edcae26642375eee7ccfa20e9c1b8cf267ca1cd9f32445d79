I"@#<p><br /></p>

<h2 id="백준-10146-격자상의-경로--실버-1">백준 10146 격자상의 경로 : 실버 1</h2>

<p><br /></p>

<p><img src="https://user-images.githubusercontent.com/92680829/139755478-36717d0f-6ea7-42c6-9c81-3e310aa2217b.png" />
<img src="https://user-images.githubusercontent.com/92680829/139755664-59370640-b198-426a-a225-ee2b52476b46.png" /></p>

<p><br /></p>

<h2 id="solution"><strong>Solution</strong></h2>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="nb">input</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span>

<span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="n">k</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
<span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">m</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

<span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">:</span>         
    <span class="n">n1</span><span class="p">,</span> <span class="n">m1</span><span class="p">,</span> <span class="n">n2</span><span class="p">,</span> <span class="n">m2</span> <span class="o">=</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">k</span><span class="o">%</span><span class="n">m</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>            <span class="c1"># 각 행의 마지막 열
</span>        <span class="n">n1</span><span class="p">,</span> <span class="n">m1</span> <span class="o">=</span> <span class="n">k</span><span class="o">//</span><span class="n">m</span><span class="p">,</span> <span class="n">m</span>
    <span class="k">else</span><span class="p">:</span> 
        <span class="n">n1</span><span class="p">,</span> <span class="n">m1</span> <span class="o">=</span> <span class="n">k</span><span class="o">//</span><span class="n">m</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">k</span><span class="o">%</span><span class="n">m</span>
    <span class="n">n2</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="n">n1</span> <span class="o">+</span><span class="mi">1</span>
    <span class="n">m2</span> <span class="o">=</span> <span class="n">m</span> <span class="o">-</span> <span class="n">m1</span> <span class="o">+</span><span class="mi">1</span>

<span class="k">def</span> <span class="nf">findPath</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="n">m</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">return</span> <span class="mi">1</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">==</span><span class="mi">1</span> <span class="ow">or</span> <span class="n">m</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="mi">1</span>

    <span class="n">tot</span> <span class="o">=</span> <span class="n">n</span><span class="o">*</span><span class="n">m</span>
    <span class="n">DP</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">tot</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)]</span>
    <span class="n">DP</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">tot</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">i</span><span class="o">%</span><span class="n">m</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>            <span class="c1"># 각 행의 첫 번째 열
</span>            <span class="n">DP</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">DP</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">m</span><span class="p">]</span>
        <span class="k">elif</span> <span class="n">i</span><span class="o">//</span><span class="n">m</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">or</span> <span class="p">(</span><span class="n">i</span><span class="o">//</span><span class="n">m</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">i</span><span class="o">%</span><span class="n">m</span> <span class="o">==</span> <span class="mi">0</span><span class="p">):</span>         <span class="c1"># 첫 번째 행
</span>            <span class="n">DP</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">DP</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">DP</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">DP</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">m</span><span class="p">]</span> <span class="o">+</span> <span class="n">DP</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">DP</span><span class="p">[</span><span class="n">tot</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">findPath</span><span class="p">(</span><span class="n">n1</span><span class="p">,</span> <span class="n">m1</span><span class="p">)</span><span class="o">*</span><span class="n">findPath</span><span class="p">(</span><span class="n">n2</span><span class="p">,</span> <span class="n">m2</span><span class="p">))</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="풀이과정-및-느낀점"><strong>풀이과정 및 느낀점</strong></h2>

<p><br /></p>

<p>케이스를 나누는 게 꽤 까다로운 dP 문제였다.
<br />
우선 k 가 0 인 경우와 그렇지 않은 경우로 나누고, k 의 위치를 기준으로 격자를 나누고, 각 두 격자의 끝 값까지 도달하는 경우의 수를 곱해서 최종적으로 출력한다.
<br />
k 가 0인 경우는 그냥 n1, m1, n2, m2 = n, m, 0, 0 으로 설정하고,
<br />
k가 0이 아닌 경우, k의 위치가 각 행의 마지막 열에 있는 경우와(n1, m1 = k//m, m) 아닌 경우로 (n1, m1 = k//m+1, k%m) 또 나누어서 두 격자의 위치를 나눈다. 
<br />
경로를 찾는 findPath 함수 내에서 n, m 이 0 으로 들어오거나, n, m 중 적어도 하나가 1이라면 경우의 수는 1개밖에 없으니 1을 return 하고, 아닌 경우에는 DP 값을 갱신해준다. (1. 각 행의 첫번째 열, 2. 첫번째 행, 3. 그렇지 않은 경우로 나누어서 갱신)
<br />
DP[1] = 1 로 설정하고 for 문을 2번째 idx 부터 돌리기 때문에 1번 케이스와 2번 케이스가 겹칠 일은 없다.
<br />
이 문제는 특이하게 서브케이스가 나누어져있고, 제출하게 되면 오답 or 정답이 아닌 점수가 부여되는데, 처음에는 32점이 계속 나오다가 k 가 각 행의 마지막 열에 있는 경우에 대한 예외처리를 해줘서 100점이 나왔다.
<br />
꽤 재밌는 DP 문제였다.</p>

:ET