I"ýÊ<h2 id="outlines"><strong>Outlines</strong></h2>
<ul>
  <li><a href="#references"><strong>References</strong></a></li>
  <li><a href="#inception-v1-architecture"><strong>Inception V1 Architecture</strong></a></li>
  <li><a href="#implementation-with-pytorch"><strong>Implementation with PyTorch</strong></a></li>
  <li><a href="#model-summary"><strong>Model Summary</strong></a></li>
  <li><a href="#forward-pass"><strong>Forward Pass</strong></a></li>
</ul>

<p><br /></p>

<h2 id="references"><strong>References</strong></h2>
<ul>
  <li><a href="https://arxiv.org/abs/1409.4842" target="_blank">Going deeper with convolutions, Christian Szegedy (2014)</a></li>
  <li><a href="https://hyukppen.modoo.at/?link=5db82s6p" target="_blank">https://hyukppen.modoo.at/?link=5db82s6p</a></li>
</ul>

<p><br /></p>

<h2 id="inception-v1-architecture"><strong>Inception V1 Architecture</strong></h2>

<p><br /></p>
<p align="center"><img src="https://github.com/SuminizZ/Physics/assets/92680829/86b9a02c-93b7-4c52-a71f-465a3e99a431" width="670px" /></p>

<p><br /></p>
<p align="center"><img width="600px" alt="image" src="https://github.com/SuminizZ/Physics/assets/92680829/b9c4f89d-e0e6-4d2b-819a-5725cb549c51" /></p>

<p><br /></p>

<ol>
  <li>improves computational efficiency
    <ul>
      <li>reduce dimension of parameters by adding extra 1x1 conv layer before 3x3 and 5x5 conv layers</li>
      <li>take global average pooling before entering into fc layer</li>
    </ul>
  </li>
  <li>Use different sizes of filters to perform convolution on a single input and concatenate them into one output (output sizes adjusted with padding)
    <ul>
      <li>combination</li>
      <li>recorded lowest error at ImageNet classifcation</li>
    </ul>
  </li>
  <li>mitigate gradient vanishing problem with auxiliary classifiers
    <ul>
      <li>increase the gradient signal from intermediate or lower layers but with regularization factor 0.3 (loss = final_out_loss + 0.3*(aux1_loss + aux2_loss)</li>
      <li>-&gt; turns out this is not the case. (these branches not help reflecting low-level features) Instead, they work as regularizers with batch noramlization applied</li>
    </ul>
  </li>
</ol>

<p><br /></p>

<p><img src="https://github.com/SuminizZ/Physics/assets/92680829/29509567-5368-41f9-b847-538a95251520" /></p>

<p><br /></p>

<h2 id="implementation-with-pytorch"><strong>Implementation with PyTorch</strong></h2>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">google.colab</span> <span class="kn">import</span> <span class="n">drive</span>
<span class="n">drive</span><span class="p">.</span><span class="n">mount</span><span class="p">(</span><span class="s">'/content/drive'</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="n">sys</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"/content/drive/MyDrive/Legend13"</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">torch</span> 
<span class="kn">import</span> <span class="nn">torch.nn</span> <span class="k">as</span> <span class="n">nn</span>
<span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">torchinfo</span>
<span class="kn">from</span> <span class="nn">torchinfo</span> <span class="kn">import</span> <span class="n">summary</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Mounted at /content/drive
Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/
Collecting torchinfo
  Downloading torchinfo-1.8.0-py3-none-any.whl (23 kB)
Installing collected packages: torchinfo
Successfully installed torchinfo-1.8.0
</code></pre></div></div>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">BasicConv2d</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_channel</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="n">size</span><span class="p">,</span> <span class="n">stride</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">layer</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Conv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">F</span><span class="p">,</span> <span class="n">size</span><span class="p">,</span> <span class="n">stride</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="n">padding</span><span class="p">),</span>
                                   <span class="n">nn</span><span class="p">.</span><span class="n">BatchNorm2d</span><span class="p">(</span><span class="n">F</span><span class="p">),</span>
                                   <span class="n">nn</span><span class="p">.</span><span class="n">ReLU</span><span class="p">())</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">out</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">layer</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">out</span> 


<span class="k">class</span> <span class="nc">Inception</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_channel</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="n">final_F</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">final_F</span> <span class="o">=</span> <span class="n">final_F</span>
        <span class="n">c1_F</span><span class="p">,</span> <span class="n">c3_red_F</span><span class="p">,</span> <span class="n">c3_F</span><span class="p">,</span> <span class="n">c5_red_F</span><span class="p">,</span> <span class="n">c5_F</span><span class="p">,</span> <span class="n">poolproj_F</span> <span class="o">=</span> <span class="n">Fs</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">conv1x1</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">c1_F</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">conv3x3</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">c3_red_F</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                     <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">c3_red_F</span><span class="p">,</span> <span class="n">c3_F</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">conv5x5</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">c5_red_F</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                     <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">c5_red_F</span><span class="p">,</span> <span class="n">c5_F</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">maxpool_conv1x1</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
                                             <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="n">poolproj_F</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">x_concat</span> <span class="o">=</span> <span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">conv1x1</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv3x3</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv5x5</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="bp">self</span><span class="p">.</span><span class="n">maxpool_conv1x1</span><span class="p">(</span><span class="n">x</span><span class="p">)]</span>
        <span class="n">x_concat</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">cat</span><span class="p">(</span><span class="n">x_concat</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>   <span class="c1"># N,F,H,W
</span>        <span class="c1"># assert x_concat.shape[1] == self.final_F
</span>        
        <span class="k">return</span> <span class="n">x_concat</span>


<span class="k">class</span> <span class="nc">AuxOut</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">in_channel</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">num_classes</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">avgpool_conv</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">AvgPool2d</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
                                          <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">fc</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Sequential</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">2048</span><span class="p">,</span> <span class="mi">1024</span><span class="p">),</span>
                                <span class="n">nn</span><span class="p">.</span><span class="n">ReLU</span><span class="p">(),</span>
                                <span class="n">nn</span><span class="p">.</span><span class="n">Dropout</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="p">),</span>
                                <span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">1024</span><span class="p">,</span> <span class="n">num_classes</span><span class="p">))</span>
        
    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">avgpool_conv</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">flatten</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">out</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">fc</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">out</span> 


<span class="k">class</span> <span class="nc">Inception_V1</span><span class="p">(</span><span class="n">nn</span><span class="p">.</span><span class="n">Module</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">init_weights</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">p</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">use_aux</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">in_channel</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">num_classes</span><span class="o">=</span><span class="mi">1000</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">use_aux</span> <span class="o">=</span> <span class="n">use_aux</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">conv1</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="n">in_channel</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">maxpool1</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">conv2a</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">conv2b</span> <span class="o">=</span> <span class="n">BasicConv2d</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">maxpool2</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

        <span class="n">Fs</span> <span class="o">=</span> <span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">32</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inception3a</span> <span class="o">=</span> <span class="n">Inception</span><span class="p">(</span><span class="mi">192</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="mi">256</span><span class="p">)</span>
        <span class="n">Fs</span> <span class="o">=</span> <span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">64</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inception3b</span> <span class="o">=</span> <span class="n">Inception</span><span class="p">(</span><span class="mi">256</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="mi">480</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">maxpool3</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

        <span class="n">Fs</span> <span class="o">=</span> <span class="p">(</span><span class="mi">192</span><span class="p">,</span> <span class="mi">96</span><span class="p">,</span> <span class="mi">208</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">48</span><span class="p">,</span> <span class="mi">64</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inception4a</span> <span class="o">=</span> <span class="n">Inception</span><span class="p">(</span><span class="mi">480</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="mi">512</span><span class="p">)</span>
        <span class="n">Fs</span> <span class="o">=</span> <span class="p">(</span><span class="mi">160</span><span class="p">,</span> <span class="mi">112</span><span class="p">,</span> <span class="mi">224</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">64</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inception4b</span> <span class="o">=</span> <span class="n">Inception</span><span class="p">(</span><span class="mi">512</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="mi">512</span><span class="p">)</span>
        <span class="n">Fs</span> <span class="o">=</span> <span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">256</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">64</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inception4c</span> <span class="o">=</span> <span class="n">Inception</span><span class="p">(</span><span class="mi">512</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="mi">512</span><span class="p">)</span>
        <span class="n">Fs</span> <span class="o">=</span> <span class="p">(</span><span class="mi">112</span><span class="p">,</span> <span class="mi">144</span><span class="p">,</span> <span class="mi">288</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">64</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inception4d</span> <span class="o">=</span> <span class="n">Inception</span><span class="p">(</span><span class="mi">512</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="mi">528</span><span class="p">)</span>
        <span class="n">Fs</span> <span class="o">=</span> <span class="p">(</span><span class="mi">256</span><span class="p">,</span> <span class="mi">160</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">128</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inception4e</span> <span class="o">=</span> <span class="n">Inception</span><span class="p">(</span><span class="mi">528</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="mi">832</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">maxpool4</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MaxPool2d</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

        <span class="n">Fs</span> <span class="o">=</span> <span class="p">(</span><span class="mi">256</span><span class="p">,</span> <span class="mi">160</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">128</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inception5a</span> <span class="o">=</span> <span class="n">Inception</span><span class="p">(</span><span class="mi">832</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="mi">832</span><span class="p">)</span>
        <span class="n">Fs</span> <span class="o">=</span> <span class="p">(</span><span class="mi">384</span><span class="p">,</span> <span class="mi">192</span><span class="p">,</span> <span class="mi">384</span><span class="p">,</span> <span class="mi">48</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">128</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">inception5b</span> <span class="o">=</span> <span class="n">Inception</span><span class="p">(</span><span class="mi">832</span><span class="p">,</span> <span class="n">Fs</span><span class="p">,</span> <span class="mi">1024</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">use_aux</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">aux1</span> <span class="o">=</span> <span class="n">AuxOut</span><span class="p">(</span><span class="mi">512</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">num_classes</span><span class="p">)</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">aux2</span> <span class="o">=</span> <span class="n">AuxOut</span><span class="p">(</span><span class="mi">528</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">num_classes</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">aux1</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">aux2</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="bp">None</span>
        
        <span class="bp">self</span><span class="p">.</span><span class="n">gap</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">AdaptiveAvgPool2d</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">dropout</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Dropout</span><span class="p">(</span><span class="n">p</span><span class="o">=</span><span class="n">p</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">classifier</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">Linear</span><span class="p">(</span><span class="mi">1024</span><span class="p">,</span> <span class="n">num_classes</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">init_weights</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">modules</span><span class="p">():</span>
                <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">nn</span><span class="p">.</span><span class="n">Conv2d</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">nn</span><span class="p">.</span><span class="n">Conv2d</span><span class="p">):</span>
                    <span class="n">nn</span><span class="p">.</span><span class="n">init</span><span class="p">.</span><span class="n">trunc_normal_</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">weight</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">1e-2</span><span class="p">,</span> <span class="n">a</span><span class="o">=-</span><span class="mi">2</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">m</span><span class="p">.</span><span class="n">bias</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
                        <span class="n">nn</span><span class="p">.</span><span class="n">init</span><span class="p">.</span><span class="n">constant_</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">bias</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
                <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">nn</span><span class="p">.</span><span class="n">BatchNorm2d</span><span class="p">):</span>
                    <span class="n">nn</span><span class="p">.</span><span class="n">init</span><span class="p">.</span><span class="n">constant_</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">weight</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
                    <span class="n">nn</span><span class="p">.</span><span class="n">init</span><span class="p">.</span><span class="n">constant_</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">bias</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">forward</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv1</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">maxpool1</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv2a</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">conv2b</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">maxpool2</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inception3a</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inception3b</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">maxpool3</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inception4a</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">training</span> <span class="ow">and</span> <span class="bp">self</span><span class="p">.</span><span class="n">aux1</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">aux1_out</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">aux1</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span> <span class="n">aux1_out</span> <span class="o">=</span> <span class="bp">None</span>

        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inception4b</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inception4c</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inception4d</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

        <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">training</span> <span class="ow">and</span> <span class="bp">self</span><span class="p">.</span><span class="n">aux2</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">aux2_out</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">aux2</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span> <span class="n">aux2_out</span> <span class="o">=</span> <span class="bp">None</span>

        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inception4e</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">maxpool4</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inception5a</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">inception5b</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">gap</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">flatten</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">x</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">dropout</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="n">out</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">classifier</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">aux1_out</span><span class="p">,</span> <span class="n">aux2_out</span><span class="p">,</span> <span class="n">out</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="model-summary"><strong>Model Summary</strong></h2>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span> <span class="o">=</span> <span class="n">Inception_V1</span><span class="p">()</span>
<span class="n">summary</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">input_size</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">224</span><span class="p">,</span> <span class="mi">224</span><span class="p">),</span> <span class="n">device</span><span class="o">=</span><span class="s">'cpu'</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>===============================================================================================
Layer (type:depth-idx)                        Output Shape              Param #
===============================================================================================
Inception_V1                                  --                        6,380,240
ââBasicConv2d: 1-1                            [2, 64, 112, 112]         --
â    ââSequential: 2-1                        [2, 64, 112, 112]         --
â    â    ââConv2d: 3-1                       [2, 64, 112, 112]         9,472
â    â    ââBatchNorm2d: 3-2                  [2, 64, 112, 112]         128
â    â    ââReLU: 3-3                         [2, 64, 112, 112]         --
ââMaxPool2d: 1-2                              [2, 64, 56, 56]           --
ââBasicConv2d: 1-3                            [2, 64, 56, 56]           --
â    ââSequential: 2-2                        [2, 64, 56, 56]           --
â    â    ââConv2d: 3-4                       [2, 64, 56, 56]           4,160
â    â    ââBatchNorm2d: 3-5                  [2, 64, 56, 56]           128
â    â    ââReLU: 3-6                         [2, 64, 56, 56]           --
ââBasicConv2d: 1-4                            [2, 192, 56, 56]          --
â    ââSequential: 2-3                        [2, 192, 56, 56]          --
â    â    ââConv2d: 3-7                       [2, 192, 56, 56]          110,784
â    â    ââBatchNorm2d: 3-8                  [2, 192, 56, 56]          384
â    â    ââReLU: 3-9                         [2, 192, 56, 56]          --
ââMaxPool2d: 1-5                              [2, 192, 28, 28]          --
ââInception: 1-6                              [2, 256, 28, 28]          --
â    ââBasicConv2d: 2-4                       [2, 64, 28, 28]           --
â    â    ââSequential: 3-10                  [2, 64, 28, 28]           12,480
â    ââSequential: 2-5                        [2, 128, 28, 28]          --
â    â    ââBasicConv2d: 3-11                 [2, 96, 28, 28]           18,720
â    â    ââBasicConv2d: 3-12                 [2, 128, 28, 28]          110,976
â    ââSequential: 2-6                        [2, 32, 28, 28]           --
â    â    ââBasicConv2d: 3-13                 [2, 16, 28, 28]           3,120
â    â    ââBasicConv2d: 3-14                 [2, 32, 28, 28]           12,896
â    ââSequential: 2-7                        [2, 32, 28, 28]           --
â    â    ââMaxPool2d: 3-15                   [2, 192, 28, 28]          --
â    â    ââBasicConv2d: 3-16                 [2, 32, 28, 28]           6,240
ââInception: 1-7                              [2, 480, 28, 28]          --
â    ââBasicConv2d: 2-8                       [2, 128, 28, 28]          --
â    â    ââSequential: 3-17                  [2, 128, 28, 28]          33,152
â    ââSequential: 2-9                        [2, 192, 28, 28]          --
â    â    ââBasicConv2d: 3-18                 [2, 128, 28, 28]          33,152
â    â    ââBasicConv2d: 3-19                 [2, 192, 28, 28]          221,760
â    ââSequential: 2-10                       [2, 96, 28, 28]           --
â    â    ââBasicConv2d: 3-20                 [2, 32, 28, 28]           8,288
â    â    ââBasicConv2d: 3-21                 [2, 96, 28, 28]           77,088
â    ââSequential: 2-11                       [2, 64, 28, 28]           --
â    â    ââMaxPool2d: 3-22                   [2, 256, 28, 28]          --
â    â    ââBasicConv2d: 3-23                 [2, 64, 28, 28]           16,576
ââMaxPool2d: 1-8                              [2, 480, 14, 14]          --
ââInception: 1-9                              [2, 512, 14, 14]          --
â    ââBasicConv2d: 2-12                      [2, 192, 14, 14]          --
â    â    ââSequential: 3-24                  [2, 192, 14, 14]          92,736
â    ââSequential: 2-13                       [2, 208, 14, 14]          --
â    â    ââBasicConv2d: 3-25                 [2, 96, 14, 14]           46,368
â    â    ââBasicConv2d: 3-26                 [2, 208, 14, 14]          180,336
â    ââSequential: 2-14                       [2, 48, 14, 14]           --
â    â    ââBasicConv2d: 3-27                 [2, 16, 14, 14]           7,728
â    â    ââBasicConv2d: 3-28                 [2, 48, 14, 14]           19,344
â    ââSequential: 2-15                       [2, 64, 14, 14]           --
â    â    ââMaxPool2d: 3-29                   [2, 480, 14, 14]          --
â    â    ââBasicConv2d: 3-30                 [2, 64, 14, 14]           30,912
ââInception: 1-10                             [2, 512, 14, 14]          --
â    ââBasicConv2d: 2-16                      [2, 160, 14, 14]          --
â    â    ââSequential: 3-31                  [2, 160, 14, 14]          82,400
â    ââSequential: 2-17                       [2, 224, 14, 14]          --
â    â    ââBasicConv2d: 3-32                 [2, 112, 14, 14]          57,680
â    â    ââBasicConv2d: 3-33                 [2, 224, 14, 14]          226,464
â    ââSequential: 2-18                       [2, 64, 14, 14]           --
â    â    ââBasicConv2d: 3-34                 [2, 24, 14, 14]           12,360
â    â    ââBasicConv2d: 3-35                 [2, 64, 14, 14]           38,592
â    ââSequential: 2-19                       [2, 64, 14, 14]           --
â    â    ââMaxPool2d: 3-36                   [2, 512, 14, 14]          --
â    â    ââBasicConv2d: 3-37                 [2, 64, 14, 14]           32,960
ââInception: 1-11                             [2, 512, 14, 14]          --
â    ââBasicConv2d: 2-20                      [2, 128, 14, 14]          --
â    â    ââSequential: 3-38                  [2, 128, 14, 14]          65,920
â    ââSequential: 2-21                       [2, 256, 14, 14]          --
â    â    ââBasicConv2d: 3-39                 [2, 128, 14, 14]          65,920
â    â    ââBasicConv2d: 3-40                 [2, 256, 14, 14]          295,680
â    ââSequential: 2-22                       [2, 64, 14, 14]           --
â    â    ââBasicConv2d: 3-41                 [2, 24, 14, 14]           12,360
â    â    ââBasicConv2d: 3-42                 [2, 64, 14, 14]           38,592
â    ââSequential: 2-23                       [2, 64, 14, 14]           --
â    â    ââMaxPool2d: 3-43                   [2, 512, 14, 14]          --
â    â    ââBasicConv2d: 3-44                 [2, 64, 14, 14]           32,960
ââInception: 1-12                             [2, 528, 14, 14]          --
â    ââBasicConv2d: 2-24                      [2, 112, 14, 14]          --
â    â    ââSequential: 3-45                  [2, 112, 14, 14]          57,680
â    ââSequential: 2-25                       [2, 288, 14, 14]          --
â    â    ââBasicConv2d: 3-46                 [2, 144, 14, 14]          74,160
â    â    ââBasicConv2d: 3-47                 [2, 288, 14, 14]          374,112
â    ââSequential: 2-26                       [2, 64, 14, 14]           --
â    â    ââBasicConv2d: 3-48                 [2, 32, 14, 14]           16,480
â    â    ââBasicConv2d: 3-49                 [2, 64, 14, 14]           51,392
â    ââSequential: 2-27                       [2, 64, 14, 14]           --
â    â    ââMaxPool2d: 3-50                   [2, 512, 14, 14]          --
â    â    ââBasicConv2d: 3-51                 [2, 64, 14, 14]           32,960
ââInception: 1-13                             [2, 832, 14, 14]          --
â    ââBasicConv2d: 2-28                      [2, 256, 14, 14]          --
â    â    ââSequential: 3-52                  [2, 256, 14, 14]          135,936
â    ââSequential: 2-29                       [2, 320, 14, 14]          --
â    â    ââBasicConv2d: 3-53                 [2, 160, 14, 14]          84,960
â    â    ââBasicConv2d: 3-54                 [2, 320, 14, 14]          461,760
â    ââSequential: 2-30                       [2, 128, 14, 14]          --
â    â    ââBasicConv2d: 3-55                 [2, 32, 14, 14]           16,992
â    â    ââBasicConv2d: 3-56                 [2, 128, 14, 14]          102,784
â    ââSequential: 2-31                       [2, 128, 14, 14]          --
â    â    ââMaxPool2d: 3-57                   [2, 528, 14, 14]          --
â    â    ââBasicConv2d: 3-58                 [2, 128, 14, 14]          67,968
ââMaxPool2d: 1-14                             [2, 832, 7, 7]            --
ââInception: 1-15                             [2, 832, 7, 7]            --
â    ââBasicConv2d: 2-32                      [2, 256, 7, 7]            --
â    â    ââSequential: 3-59                  [2, 256, 7, 7]            213,760
â    ââSequential: 2-33                       [2, 320, 7, 7]            --
â    â    ââBasicConv2d: 3-60                 [2, 160, 7, 7]            133,600
â    â    ââBasicConv2d: 3-61                 [2, 320, 7, 7]            461,760
â    ââSequential: 2-34                       [2, 128, 7, 7]            --
â    â    ââBasicConv2d: 3-62                 [2, 32, 7, 7]             26,720
â    â    ââBasicConv2d: 3-63                 [2, 128, 7, 7]            102,784
â    ââSequential: 2-35                       [2, 128, 7, 7]            --
â    â    ââMaxPool2d: 3-64                   [2, 832, 7, 7]            --
â    â    ââBasicConv2d: 3-65                 [2, 128, 7, 7]            106,880
ââInception: 1-16                             [2, 1024, 7, 7]           --
â    ââBasicConv2d: 2-36                      [2, 384, 7, 7]            --
â    â    ââSequential: 3-66                  [2, 384, 7, 7]            320,640
â    ââSequential: 2-37                       [2, 384, 7, 7]            --
â    â    ââBasicConv2d: 3-67                 [2, 192, 7, 7]            160,320
â    â    ââBasicConv2d: 3-68                 [2, 384, 7, 7]            664,704
â    ââSequential: 2-38                       [2, 128, 7, 7]            --
â    â    ââBasicConv2d: 3-69                 [2, 48, 7, 7]             40,080
â    â    ââBasicConv2d: 3-70                 [2, 128, 7, 7]            153,984
â    ââSequential: 2-39                       [2, 128, 7, 7]            --
â    â    ââMaxPool2d: 3-71                   [2, 832, 7, 7]            --
â    â    ââBasicConv2d: 3-72                 [2, 128, 7, 7]            106,880
ââAdaptiveAvgPool2d: 1-17                     [2, 1024, 1, 1]           --
ââDropout: 1-18                               [2, 1024]                 --
ââLinear: 1-19                                [2, 1000]                 1,025,000
===============================================================================================
Total params: 13,393,352
Trainable params: 13,393,352
Non-trainable params: 0
Total mult-adds (G): 3.17
===============================================================================================
Input size (MB): 1.20
Forward/backward pass size (MB): 103.25
Params size (MB): 28.05
Estimated Total Size (MB): 132.51
===============================================================================================
</code></pre></div></div>

<p><br /></p>

<h2 id="forward-pass"><strong>Forward Pass</strong></h2>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">224</span><span class="p">,</span><span class="mi">224</span><span class="p">)</span>
<span class="n">aux1_out</span><span class="p">,</span> <span class="n">aux2_out</span><span class="p">,</span> <span class="n">out</span> <span class="o">=</span> <span class="n">model</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">aux1_out</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">aux2_out</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">out</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>torch.Size([2, 1000])
torch.Size([2, 1000])
torch.Size([2, 1000])
</code></pre></div></div>

:ET