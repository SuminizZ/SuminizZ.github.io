I"1<h2 id="문제"><strong>문제</strong></h2>
<p>백준 1446 주간미팅 : 골드 4
<img src="https://user-images.githubusercontent.com/92680829/141027066-81ef6bd6-6e65-48be-a408-62ada1b2a9db.png" /></p>

<h2 id="solution"><strong>Solution</strong></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">from</span> <span class="nn">heapq</span> <span class="kn">import</span> <span class="o">*</span>
<span class="nb">input</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">stdin</span><span class="p">.</span><span class="n">readline</span>

<span class="n">n</span><span class="p">,</span> <span class="n">v</span><span class="p">,</span> <span class="n">e</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
<span class="n">kst</span><span class="p">,</span> <span class="n">cf</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
<span class="n">memb_loc</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">()))</span>

<span class="n">conn</span> <span class="o">=</span> <span class="p">[[]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">v</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>
<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">e</span><span class="p">):</span>
    <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">l</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">())</span>
    <span class="n">conn</span><span class="p">[</span><span class="n">a</span><span class="p">].</span><span class="n">append</span><span class="p">([</span><span class="n">b</span><span class="p">,</span> <span class="n">l</span><span class="p">])</span>          <span class="c1"># bidirectional connection
</span>    <span class="n">conn</span><span class="p">[</span><span class="n">b</span><span class="p">].</span><span class="n">append</span><span class="p">([</span><span class="n">a</span><span class="p">,</span> <span class="n">l</span><span class="p">])</span>

<span class="k">def</span> <span class="nf">dist</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">d</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">s</span> <span class="o">==</span> <span class="n">d</span><span class="p">:</span>
        <span class="k">return</span> <span class="mi">0</span>
    <span class="n">cost_map</span> <span class="o">=</span> <span class="p">[</span><span class="nb">float</span><span class="p">(</span><span class="s">'inf'</span><span class="p">)</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">v</span><span class="o">+</span><span class="mi">1</span><span class="p">)]</span>
    <span class="n">hq</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">heappush</span><span class="p">(</span><span class="n">hq</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="n">s</span><span class="p">])</span>        <span class="c1"># [cur_cummulated_cost, start]
</span>    <span class="k">while</span> <span class="n">hq</span><span class="p">:</span>
        <span class="n">cur_w</span><span class="p">,</span> <span class="n">cur_n</span> <span class="o">=</span> <span class="n">heappop</span><span class="p">(</span><span class="n">hq</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">nxt_n</span><span class="p">,</span> <span class="n">nxt_w</span> <span class="ow">in</span> <span class="n">conn</span><span class="p">[</span><span class="n">cur_n</span><span class="p">]:</span>
            <span class="k">if</span> <span class="n">cost_map</span><span class="p">[</span><span class="n">nxt_n</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">cur_w</span><span class="p">:</span> <span class="k">continue</span>
            <span class="n">dist</span> <span class="o">=</span> <span class="n">nxt_w</span> <span class="o">+</span> <span class="n">cur_w</span> 
            <span class="k">if</span> <span class="n">cost_map</span><span class="p">[</span><span class="n">nxt_n</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">dist</span><span class="p">:</span>
                <span class="n">cost_map</span><span class="p">[</span><span class="n">nxt_n</span><span class="p">]</span> <span class="o">=</span> <span class="n">dist</span>
                <span class="n">heappush</span><span class="p">(</span><span class="n">hq</span><span class="p">,</span> <span class="p">[</span><span class="n">dist</span><span class="p">,</span> <span class="n">nxt_n</span><span class="p">])</span>
    
    <span class="k">if</span> <span class="n">cost_map</span><span class="p">[</span><span class="n">d</span><span class="p">]</span> <span class="o">==</span> <span class="nb">float</span><span class="p">(</span><span class="s">'inf'</span><span class="p">):</span>
        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
    <span class="k">else</span><span class="p">:</span> 
        <span class="k">return</span> <span class="n">cost_map</span><span class="p">[</span><span class="n">d</span><span class="p">]</span> 

<span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">m_loc</span> <span class="ow">in</span> <span class="n">memb_loc</span><span class="p">:</span>
    <span class="n">ans</span> <span class="o">+=</span> <span class="n">dist</span><span class="p">(</span><span class="n">m_loc</span><span class="p">,</span> <span class="n">kst</span><span class="p">)</span> <span class="o">+</span> <span class="n">dist</span><span class="p">(</span><span class="n">m_loc</span><span class="p">,</span> <span class="n">cf</span><span class="p">)</span>       <span class="c1"># HOME to KST + HOME to CF
</span>
<span class="k">print</span><span class="p">(</span><span class="n">ans</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="풀이과정-및-느낀점"><strong>풀이과정 및 느낀점</strong></h2>
<p>일반적인 다익스트라 알고리즘이지만, 다른 점은</p>
<ol>
  <li>양방향 연결구조</li>
  <li>최단거리를 2개 합해진 게 하나의 결과</li>
</ol>

<p>위 2개 정도이다.
<br />
<br />
또 한 가지 주의할 점은,
<br />
처음에 70% 정도까지 정답률이 채워지다가 틀렸습니다가 떠서 뭐지 했는데 시작점과 도착점이 같은 경우,
<br />
dist 함수가 0을 반환해줘야 한다는 것을 놓쳤기 때문이었다.
<br />
그냥 항상 시작점의 최단거리를 cost_map[s] = 0 으로 설정하고 문제를 풀어야겠다.</p>

:ET